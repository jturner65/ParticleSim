// generated by Fast Light User Interface Designer (fluid) version 2.1000

#ifndef ParticleSystemUI_h
#define ParticleSystemUI_h
#include <vector>
#include <fstream>
#include "UICallback.h"
class WindowGLDisplay;
class ControlPanel;
#include <fltk/DoubleBufferWindow.h>
#include <fltk/Group.h>
#include <fltk/Button.h>

class ParticleSystemUI  {
public:
	ControlPanel *mControl;
	ParticleSystemUI();
	fltk::DoubleBufferWindow *mFLWindow;
	fltk::Group *mControlGrp;
	fltk::Button *mRecordMotion_but;
	fltk::Button *mStillShot_but;
private:
		inline void cb_mStillShot_but_i(fltk::Button*, void*);
		static void cb_mStillShot_but(fltk::Button*, void*);
public:
		fltk::Button *mSim_but;
private:
		inline void cb_mSim_but_i(fltk::Button*, void*);
		static void cb_mSim_but(fltk::Button*, void*);
public:
	fltk::Button *mSwitch_but;
private:
	inline void cb_mSwitch_but_i(fltk::Button*, void*);
	static void cb_mSwitch_but(fltk::Button*, void*);
public:
		fltk::Button *mPause_but;
private:
		inline void cb_mPause_but_i(fltk::Button*, void*);
		static void cb_mPause_but(fltk::Button*, void*);

public:
	WindowGLDisplay *mGLWindow;
	void Show();
};//class particlesystemui

#endif
