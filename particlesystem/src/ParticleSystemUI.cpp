// generated by Fast Light User Interface Designer (fluid) version 2.1000

#include "ParticleSystemUI.h"
#include <fltk/xpmImage.h>
#include "WindowGLDisplay.h"
#include "ControlPanel.h"

#include <fltk/SharedImage.h>

static const unsigned char datas_record[206] = {
71,73,70,56,57,97,26,0,26,0,162,0,0,255,0,255,0,0,0,255,255,255,198,198,198,
132,132,132,0,0,0,0,0,0,0,0,0,33,249,4,1,0,0,0,0,44,0,0,0,0,26,0,26,0,0,3,147,
8,186,220,254,45,200,41,161,13,66,140,189,73,176,17,37,138,97,21,12,89,170,
170,4,67,9,146,54,82,221,130,77,131,167,9,68,239,243,167,92,10,53,241,96,58,
190,94,46,72,224,108,40,128,163,102,48,163,248,168,31,197,113,50,117,114,140,
205,138,182,155,75,154,61,81,163,141,92,157,216,196,233,179,188,229,202,106,
219,36,144,141,160,241,217,245,37,110,128,15,18,84,104,131,17,48,88,84,136,
46,84,88,135,141,39,31,147,1,145,131,48,90,143,39,141,0,140,81,155,116,131,
112,160,148,127,23,3,17,140,151,32,167,150,167,157,10,106,122,9,0,59};

inline void ParticleSystemUI::cb_mStillShot_but_i(fltk::Button* o, void* v) {
	StillShot_cb(o, v);
}
void ParticleSystemUI::cb_mStillShot_but(fltk::Button* o, void* v) {
	((ParticleSystemUI*)(o->parent()->parent()->user_data()))->cb_mStillShot_but_i(o,v);
}
static const unsigned char datas_camera1[259] = {
71,73,70,56,57,97,32,0,27,0,242,0,0,0,0,0,0,0,189,0,0,255,132,132,132,198,
198,198,255,0,0,255,255,255,0,0,0,33,249,4,1,0,0,5,0,44,0,0,0,0,32,0,27,0,0,
3,200,88,186,92,243,176,201,57,31,185,55,208,45,135,49,3,22,140,92,67,12,140,
103,92,225,232,46,16,106,158,178,96,223,130,171,59,225,99,126,43,140,112,56,
132,144,24,4,32,113,41,236,13,142,139,228,135,41,13,54,31,80,5,110,107,187,
0,190,88,23,97,199,16,124,207,231,16,58,189,94,251,4,16,180,186,13,166,131,
31,240,7,154,128,54,180,7,95,94,105,120,113,96,124,95,126,127,129,135,119,3,
121,128,129,144,0,137,103,102,0,144,140,151,132,122,145,116,102,150,152,114,
155,146,39,158,0,160,129,162,142,133,151,153,95,150,102,146,110,163,123,118,
168,116,16,143,114,174,114,118,154,171,156,105,188,151,190,191,186,110,44,49,
197,191,203,191,178,190,16,85,84,211,58,141,11,205,216,49,48,49,220,221,222,
221,219,223,226,227,41,227,230,220,5,9,0,59};

inline void ParticleSystemUI::cb_mSim_but_i(fltk::Button* o, void* v) {
	Sim_cb(o, v);
}
void ParticleSystemUI::cb_mSim_but(fltk::Button* o, void* v) {
	((ParticleSystemUI*)(o->parent()->parent()->user_data()))->cb_mSim_but_i(o,v);
}
inline void ParticleSystemUI::cb_mPause_but_i(fltk::Button* o, void* v) {
	Pause_cb(o, v);
}
void ParticleSystemUI::cb_mPause_but(fltk::Button* o, void* v) {
	((ParticleSystemUI*)(o->parent()->parent()->user_data()))->cb_mPause_but_i(o,v);
}

static const unsigned char datas_spacetime[190] = {
71,73,70,56,57,97,28,0,28,0,162,0,0,192,192,192,0,0,0,255,255,255,128,128,
128,255,255,0,128,128,0,0,0,0,0,0,0,33,249,4,1,0,0,0,0,44,0,0,0,0,28,0,28,0,
0,3,131,8,186,220,254,46,200,73,171,132,42,44,33,222,248,3,160,97,87,103,73,
225,133,45,99,199,132,226,218,180,13,60,202,153,226,46,54,206,234,181,156,47,
6,216,41,10,66,31,237,149,28,106,4,133,104,115,152,131,78,169,201,27,118,70,
220,70,186,222,31,82,235,37,147,157,58,130,244,186,26,17,212,209,15,27,162,
41,188,163,133,207,152,90,191,199,7,123,104,118,112,121,128,96,50,125,132,122,
135,109,10,126,133,115,51,79,0,3,39,41,103,12,55,28,53,32,61,36,39,160,152,
97,15,9,0,59};

inline void ParticleSystemUI::cb_mSwitch_but_i(fltk::Button* o, void* v) {
	Switch_cb(o, v);
}
void ParticleSystemUI::cb_mSwitch_but(fltk::Button* o, void* v) {
	((ParticleSystemUI*)(o->parent()->parent()->user_data()))->cb_mSwitch_but_i(o,v);
}

ParticleSystemUI::ParticleSystemUI() {
	fltk::DoubleBufferWindow* w;
    int width = 1600, height = 900;
	{fltk::DoubleBufferWindow* o = mFLWindow = new fltk::DoubleBufferWindow(width, height, "Particle System");
	w = o;
	o->type(241);
	o->box(fltk::PLASTIC_UP_BOX);
	o->labelfont(fltk::HELVETICA_BOLD);
	o->shortcut(0xff1b);
	o->user_data((void*)(this));
	o->begin();
	{fltk::Group* o = mControlGrp = new fltk::Group(3, height - 105, width, 105); }
		{fltk::Group* o = new fltk::Group(3, 3, width, 47, "Menu Button");
		o->labeltype(fltk::NO_LABEL);
		o->align(fltk::ALIGN_CENTER);
		o->begin();
		{fltk::Button* o = mRecordMotion_but = new fltk::Button(2, 2, 35, 35);
		o->type(fltk::Button::TOGGLE);
		o->image(fltk::SharedImage::get("./fluid/icons/record.gif"));
		o->box(fltk::PLASTIC_UP_BOX);
		o->buttonbox(fltk::PLASTIC_UP_BOX);
		o->color((fltk::Color)7);
		o->selection_color((fltk::Color)0x8099ff00);
		o->selection_textcolor((fltk::Color)56);
		o->tooltip("Record motion");}
		{fltk::Button* o = mStillShot_but = new fltk::Button(42, 2, 35, 35);
		o->image(fltk::SharedImage::get("./fluid/icons/camera1.gif"));
		o->box(fltk::PLASTIC_UP_BOX);
		o->buttonbox(fltk::PLASTIC_UP_BOX);
		o->color((fltk::Color)7);
		o->selection_color((fltk::Color)0x8099ff00);
		o->selection_textcolor((fltk::Color)56);
		o->callback((fltk::Callback*)cb_mStillShot_but);
		o->tooltip("Still shot");}
		{fltk::Button* o = mSim_but = new fltk::Button(82, 2, 35, 35);
		o->type(fltk::Button::TOGGLE);
		o->image(fltk::SharedImage::get("./fluid/icons/spacetime-1.gif"));
		o->box(fltk::PLASTIC_UP_BOX);
		o->buttonbox(fltk::PLASTIC_UP_BOX);
		o->color((fltk::Color)7);
		o->selection_color((fltk::Color)0x8099ff00);
		o->selection_textcolor((fltk::Color)56);
		o->callback((fltk::Callback*)cb_mSim_but);
		o->tooltip("Simulation mode");}
		{fltk::Button* o = mSwitch_but = new fltk::Button(122, 2, 35, 35);
		o->image(fltk::SharedImage::get("./fluid/icons/keyframe.gif"));
		o->box(fltk::PLASTIC_UP_BOX);
		o->buttonbox(fltk::PLASTIC_UP_BOX);
		o->color((fltk::Color)7);
		o->selection_color((fltk::Color)0x8099ff00);
		o->selection_textcolor((fltk::Color)56);
		o->callback((fltk::Callback*)cb_mSwitch_but);
		o->tooltip("Switch scene");}
		{fltk::Button* o = mPause_but = new fltk::Button(162, 2, 35, 35);
		o->type(fltk::Button::TOGGLE);
		o->image(fltk::SharedImage::get("./fluid/icons/paw.gif"));
		o->box(fltk::PLASTIC_UP_BOX);
		o->buttonbox(fltk::PLASTIC_UP_BOX);
		o->color((fltk::Color)7);
		o->selection_color((fltk::Color)0x8099ff00);
		o->selection_textcolor((fltk::Color)56);
		o->callback((fltk::Callback*)cb_mPause_but);
		o->tooltip("Pause simulation");}
		o->end();
		o->resizable(NULL);
	}
		{WindowGLDisplay* o = mGLWindow = new WindowGLDisplay(3, 47, width, height-100);
		o->box(fltk::THIN_DOWN_BOX);
		fltk::Group::current()->resizable(o);
	}
	o->end();
	}
	mControl = new ControlPanel();
	mControl->mControlWindow->position(0,0);
	mControlGrp->add(mControl->mControlWindow);
}

void ParticleSystemUI::Show() {
	mFLWindow->show();
	mGLWindow->show();
	mControlGrp->show();
}

